# PhaserGame
目前阶段就是记录学习phaser的笔记和问题记录
在官方example中animation下creature dragon multiple.js和creature-dragon.js等在本地无法运行，在 game.add.creature这里不运行了.      后来发现是用的phaserjs文件版本比例子新，新版本中同样效果如何实现还要探究。 最终确定 是文件版本不同但不是新旧的问题，例子用的是phaser.2.4.7.complete.min.js，试验的时候用的是phaser_2_6_2.min.js，关键不是2××这个版本号，而是complete，每一版本的complete版都是比单纯版整合了更多的东西，这里还用2.6.2但加上phaser-creature.2.6.2.min.js和creature.2.6.2.min.js文件就可以了。creature这东西是一个做2d骨骼动画的，估计就是例子中的json文件用的就是这个软件生成的，但收费。Spine、DragonBones也做这件事情 其中DragonBones还免费，是白鹭的，但与phaser一定无法对接。
notedScripts文件夹是学习实例时候做了笔记的脚本备份
一些示例脚本要结合插件 未深究
phaser的本体支持box2d但是并没有嵌入box2d，还要自行添加box2d的本体。其实phaser里的box2d是一个商业插件 不要用它。非要用box2d也可以找到其他的。Ninja Physics、Particle Storm等也是同样的情况。
发现 所有示例中带有 "http://..." 的外部文件都无法成功load，不知道是不是本地apache服务器部署的问题还是什么其他的，但看这些示例在其网站上也运行不正常，应该也可能是其写法就不正确或phaser本身有此bug，而有时这样的也可以正常运行 难道只是网络问题。
对于切换浏览器标签页，游戏就暂停运行的现象，目前怀疑是与HTML5 Page Visibility API有关。还需研究。其实无论phaser自身的相关设置还是一些其他插件都在理论上有解决此问题的，但架不住浏览器不停听啊，浏览器就认为切换了得标签就要节约资源，毕竟h5不像flash，还是忤逆不了浏览器的。总之就是无法完全实际解决。
此目录(PhaserGame)下为个人尝试写的phaser项目 有些有网络化的尝试 为方便调试 开始就用bottle
test1↴
game3就已经是一个麻雀虽小五脏俱全的单机碰碰车游戏了；之后打算从game4尝试可对战化，仍以碰碰车为内容，但服务器的实现一直没有明确想法，觉得要在服务器端可以实现单机的所有功能逻辑，在客户端以视觉表现为主，那么在服务器是应该有一套同样的物理引擎逻辑才行。唉。另外CS交互应该是一直存在的，不只是有操作了才与服务器交互。
正如上面所说，暂时无法顺利直接上手游戏对战化，先进行WebSocket的试验吧;登陆用户名的部分也可以一并试验,就拿聊天室这一课题应该能满足要求。
websocket的linux下python使用的环境搭建记录：准备用的是bottle-websocket，其实即使用其他工具恐怕也逃不过相似的环境配置。要gevent，那就要先安greenlet和libevent，其中libevent的安装颇费周折。都有一些依赖库要安装。
bottle-websocket在win下安装倒方便，但插件pip3形式安好后对py3支持不好，应该是由2改过来的，自己2to3一下并修改一些地方，还是无法运行出一个简单示例，原因最可能就是2到3的改装有不足的地方，实在不行就放弃了。
最后发现问题在geventwebsocket上，不支持py3，已有人解决了这个问题，用pip安装了别人的一个fork，karellen-geventws就可以了。简单测试了一个例子bottle-websocket能运行了。
edge浏览器测试连登陆都不好使，问题不好说，若在浏览器，浏览器上网能上之前测试项目也正常；若问题在项目代码，360和谷歌浏览器就没有问题。最终解决，是edge一整就禁止所有cookie。
现聊天室这一课题可告一段落，最基本的多用户登陆及发收信息实现了，当然还有很多优化和改进的空间，比如主动退出聊天室或断开ws连接等等。有机会可能继续此项目的新阶段。
即便是再简单的游戏形式，也不可能在服务器端没有一套游戏逻辑，至少要有个时间线控制啊，毕竟不考虑作弊也要考虑网速问题啊；想在服务器端只有一个记录客户端传来的游戏状态作用的程序而自己不运行游戏逻辑是不可能的；对于有物理引擎参与到核心玩法的游戏，在服务器端必须也有一套必要的与客户端的对应得物理引擎逻辑才行。
test2↴
在之前遇到一个问题，找不到可在python服务器端用的可与phaser对应的游戏引擎，即使是单纯物理引擎也没有合适的ARCADE，所要做的这个碰碰车游戏如果服务器端脱离现有引擎还是不现实的，所以考虑用nodejs重搭建项目，可以在服务器端用js。总要学一些试一试node的。
用nodejs重实现了test1的内容但是还是无法在服务器端运行phaser引擎。既然用上了node那就试一试node能用的引擎吧，比如pomelo、matter-js等，matter不是全套解决方案的游戏引擎，是2d物理引擎，看资料应该可以在node上运行，而且可以在node上安装这个包，但pomelo是一个游戏服务器引擎，据说学习曲线较长但有学习价值即使最后不使用它不论是用任何服务器引擎还是自行写一个游戏服务器都是有很大帮助的，这个一定要上手。
